{"version":3,"file":"LoggerErrorInterceptor.js","sourceRoot":"","sources":["../src/LoggerErrorInterceptor.ts"],"names":[],"mappings":";;;;;;;;;AAAA,uDAAuD;AACvD,2CAKwB;AACxB,+BAA0D;AAGnD,IAAM,sBAAsB,GAA5B,MAAM,sBAAsB;IACjC,SAAS,CACP,OAAyB,EACzB,IAAiB;QAEjB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CACvB,IAAA,iBAAU,EAAC,CAAC,KAAK,EAAE,EAAE;YACnB,OAAO,IAAA,iBAAU,EAAC,GAAG,EAAE;gBACrB,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,WAAW,EAAE,CAAC;gBAEtD,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,KAAK,SAAS,CAAC;gBAErD,IAAI,iBAAiB,EAAE,CAAC;oBACtB,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;gBAC3B,CAAC;qBAAM,CAAC;oBACN,QAAQ,CAAC,GAAG,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAED,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF,CAAA;AAvBY,wDAAsB;iCAAtB,sBAAsB;IADlC,IAAA,mBAAU,GAAE;GACA,sBAAsB,CAuBlC","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class LoggerErrorInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable<any> | Promise<Observable<any>> {\n    return next.handle().pipe(\n      catchError((error) => {\n        return throwError(() => {\n          const response = context.switchToHttp().getResponse();\n\n          const isFastifyResponse = response.raw !== undefined;\n\n          if (isFastifyResponse) {\n            response.raw.err = error;\n          } else {\n            response.err = error;\n          }\n\n          return error;\n        });\n      }),\n    );\n  }\n}\n"]}