{"version":3,"file":"InjectPinoLogger.js","sourceRoot":"","sources":["../src/InjectPinoLogger.ts"],"names":[],"mappings":";;AAQA,4CAGC;AAaD,kEAEC;AAED,wCAEC;AA9BD,2CAAkD;AAElD,6CAA0C;AAE1C,MAAM,oBAAoB,GAAG,aAAa,CAAC;AAE3C,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAAU,CAAC;AAE3C,SAAgB,gBAAgB,CAAC,OAAO,GAAG,EAAE;IAC3C,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC9B,OAAO,IAAA,eAAM,EAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;AACzC,CAAC;AAED,SAAS,6BAA6B,CAAC,OAAe;IACpD,OAAO;QACL,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC;QAChC,UAAU,EAAE,CAAC,MAAkB,EAAE,EAAE;YACjC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC3B,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,MAAM,EAAE,CAAC,uBAAU,CAAC;KACrB,CAAC;AACJ,CAAC;AAED,SAAgB,2BAA2B;IACzC,OAAO,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAC3E,CAAC;AAED,SAAgB,cAAc,CAAC,OAAe;IAC5C,OAAO,GAAG,oBAAoB,GAAG,OAAO,EAAE,CAAC;AAC7C,CAAC","sourcesContent":["import { Inject, Provider } from '@nestjs/common';\n\nimport { PinoLogger } from './PinoLogger';\n\nconst decoratedTokenPrefix = 'PinoLogger:';\n\nconst decoratedLoggers = new Set<string>();\n\nexport function InjectPinoLogger(context = '') {\n  decoratedLoggers.add(context);\n  return Inject(getLoggerToken(context));\n}\n\nfunction createDecoratedLoggerProvider(context: string): Provider<PinoLogger> {\n  return {\n    provide: getLoggerToken(context),\n    useFactory: (logger: PinoLogger) => {\n      logger.setContext(context);\n      return logger;\n    },\n    inject: [PinoLogger],\n  };\n}\n\nexport function createProvidersForDecorated(): Array<Provider<PinoLogger>> {\n  return [...decoratedLoggers.values()].map(createDecoratedLoggerProvider);\n}\n\nexport function getLoggerToken(context: string): string {\n  return `${decoratedTokenPrefix}${context}`;\n}\n"]}