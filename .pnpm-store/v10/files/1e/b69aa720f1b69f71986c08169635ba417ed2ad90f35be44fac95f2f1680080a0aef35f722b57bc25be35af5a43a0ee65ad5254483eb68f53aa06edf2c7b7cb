{"version":3,"file":"Logger.js","sourceRoot":"","sources":["../src/Logger.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Injectable, LoggerService, Inject } from '@nestjs/common';\nimport { Level } from 'pino';\n\nimport { Params, PARAMS_PROVIDER_TOKEN } from './params';\nimport { PinoLogger } from './PinoLogger';\n\n@Injectable()\nexport class Logger implements LoggerService {\n  private readonly contextName: string;\n\n  constructor(\n    protected readonly logger: PinoLogger,\n    @Inject(PARAMS_PROVIDER_TOKEN) { renameContext }: Params,\n  ) {\n    this.contextName = renameContext || 'context';\n  }\n\n  verbose(message: any, ...optionalParams: any[]) {\n    this.call('trace', message, ...optionalParams);\n  }\n\n  debug(message: any, ...optionalParams: any[]) {\n    this.call('debug', message, ...optionalParams);\n  }\n\n  log(message: any, ...optionalParams: any[]) {\n    this.call('info', message, ...optionalParams);\n  }\n\n  warn(message: any, ...optionalParams: any[]) {\n    this.call('warn', message, ...optionalParams);\n  }\n\n  error(message: any, ...optionalParams: any[]) {\n    this.call('error', message, ...optionalParams);\n  }\n\n  fatal(message: any, ...optionalParams: any[]) {\n    this.call('fatal', message, ...optionalParams);\n  }\n\n  private call(level: Level, message: any, ...optionalParams: any[]) {\n    const objArg: Record<string, any> = {};\n\n    // optionalParams contains extra params passed to logger\n    // context name is the last item\n    let params: any[] = [];\n    if (optionalParams.length !== 0) {\n      objArg[this.contextName] = optionalParams[optionalParams.length - 1];\n      params = optionalParams.slice(0, -1);\n    }\n\n    if (typeof message === 'object') {\n      if (message instanceof Error) {\n        objArg.err = message;\n      } else {\n        Object.assign(objArg, message);\n      }\n      this.logger[level](objArg, ...params);\n    } else if (this.isWrongExceptionsHandlerContract(level, message, params)) {\n      objArg.err = new Error(message);\n      objArg.err.stack = params[0];\n      this.logger[level](objArg);\n    } else {\n      this.logger[level](objArg, message, ...params);\n    }\n  }\n\n  /**\n   * Unfortunately built-in (not only) `^.*Exception(s?)Handler$` classes call `.error`\n   * method with not supported contract:\n   *\n   * - ExceptionsHandler\n   * @see https://github.com/nestjs/nest/blob/35baf7a077bb972469097c5fea2f184b7babadfc/packages/core/exceptions/base-exception-filter.ts#L60-L63\n   *\n   * - ExceptionHandler\n   * @see https://github.com/nestjs/nest/blob/99ee3fd99341bcddfa408d1604050a9571b19bc9/packages/core/errors/exception-handler.ts#L9\n   *\n   * - WsExceptionsHandler\n   * @see https://github.com/nestjs/nest/blob/9d0551ff25c5085703bcebfa7ff3b6952869e794/packages/websockets/exceptions/base-ws-exception-filter.ts#L47-L50\n   *\n   * - RpcExceptionsHandler @see https://github.com/nestjs/nest/blob/9d0551ff25c5085703bcebfa7ff3b6952869e794/packages/microservices/exceptions/base-rpc-exception-filter.ts#L26-L30\n   *\n   * - all of them\n   * @see https://github.com/search?l=TypeScript&q=org%3Anestjs+logger+error+stack&type=Code\n   */\n  private isWrongExceptionsHandlerContract(\n    level: Level,\n    message: any,\n    params: any[],\n  ): params is [string] {\n    return (\n      level === 'error' &&\n      typeof message === 'string' &&\n      params.length === 1 &&\n      typeof params[0] === 'string' &&\n      /\\n\\s*at /.test(params[0])\n    );\n  }\n}\n"]}